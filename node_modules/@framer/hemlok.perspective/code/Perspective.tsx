import * as React from "react";
import { PropertyControls, ControlType } from "framer";

// Define type of property
interface Props {
  rotateX: string;
  rotateY: string;
  rotateZ: string;
  rotateA: number;
  perspective: number;
  anchorX: number;
  anchorY: number;
}

function rotateString(string: any) {
  const map = { "Counter Clockwise": 1, "Don't Rotate": 0, Clockwise: -1 };
  return map[string];
}

export class Perspective extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    rotateX: "Don't Rotate",
    rotateY: "Counter Clockwise",
    rotateZ: "Don't Rotate",
    rotateA: 60,
    perspective: 500,
    anchorX: 50,
    anchorY: 50
  };

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    rotateX: {
      type: ControlType.Enum,
      title: "Rotate X",
      options: ["Counter Clockwise", "Don't Rotate", "Clockwise"]
    },
    rotateY: {
      type: ControlType.Enum,
      title: "Rotate Y",
      options: ["Counter Clockwise", "Don't Rotate", "Clockwise"]
    },
    rotateZ: {
      type: ControlType.Enum,
      title: "Rotate Z",
      options: ["Counter Clockwise", "Don't Rotate", "Clockwise"]
    },
    rotateA: {
      type: ControlType.Number,
      title: "Degrees",
      max: 360,
      min: -360
    },
    perspective: {
      type: ControlType.Number,
      title: "Perspective",
      max: 2000,
      min: 0
    },
    anchorX: {
      type: ControlType.Number,
      title: "Anchor X",
      max: 100,
      min: -100
    },
    anchorY: {
      type: ControlType.Number,
      title: "Anchor Y",
      max: 100,
      min: -100
    }
  };

  render() {
    return (
      <div
        style={{
          perspective: `${this.props.perspective}px`,
          overflow: "visible",
          position: "absolute",
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          display: "flex",
          justifyContent: "center",
          alignItems: "center"
        }}
      >
        <div
          style={{
            overflow: "visible",
            transformOrigin: `${this.props.anchorX}% ${this.props.anchorY}%`,
            position: "absolute",
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            width: "100%",
            transform: `rotate3d(${rotateString(
              this.props.rotateX
            )}, ${rotateString(this.props.rotateY)}, ${rotateString(
              this.props.rotateZ
            )}, ${this.props.rotateA}deg)`
          }}
        >
          {this.props.children}
        </div>
      </div>
    );
  }
}
